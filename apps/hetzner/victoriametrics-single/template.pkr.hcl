
variable "app_name" {
  type    = string
  default = "victoriametrics-single"
}

variable "app_version" {
  type    = string
  default = "latest"
}

variable "hcloud_image" {
  type    = string
  default = "ubuntu-20.04"
}

variable "apt_packages" {
  type    = string
  default = "wget software-properties-common"
}

variable "git-sha" {
  type    = string
  default = "${env("GITHUB_SHA")}"
}

variable "hcloud_api_token" {
  type      = string
  default   = "${env("HCLOUD_API_TOKEN")}"
  sensitive = true
}

variable "snapshot_name" {
  type = string
  default = "packer-{{timestamp}}"
}


source "hcloud" "autogenerated_1" {
  image       = "${var.hcloud_image}"
  location    = "nbg1"
  server_name = "hcloud-app-builder-${var.app_name}-{{timestamp}}"
  server_type = "cx11"
  snapshot_labels = {
    git-sha   = "${var.git-sha}"
    version   = "${var.app_version}"
    slug      = "oneclick-${var.app_name}-${var.app_version}-${var.hcloud_image}"
  }
  snapshot_name = "${var.snapshot_name}"
  ssh_username  = "root"
  token         = "${var.hcloud_api_token}"
}

build {
  sources = ["source.hcloud.autogenerated_1"]

  provisioner "shell" {
    inline = ["cloud-init status --wait"]
  }

  provisioner "file" {
    destination = "/etc/"
    source      = "apps/hetzner/victoriametrics-single/files/etc/"
  }

  provisioner "file" {
    destination = "/var/"
    source      = "apps/hetzner/victoriametrics-single/files/var/"
  }

  # Setup instance configuration
  provisioner "shell" {
    environment_vars = [
      "DEBIAN_FRONTEND=noninteractive"
    ]
    scripts = [
      "scripts/01-setup.sh",
      "scripts/02-firewall.sh",
    ]
  }

  # Install VictoriaMetrics
  provisioner "shell" {
    environment_vars = ["VICTORIAMETRICS_VERSION=${var.victoriametrics_version}", "DEBIAN_FRONTEND=noninteractive"    ]
    scripts = [
      "scripts/04-install-victoriametrics.sh",
    ]
  }

  # Cleanup and validate instance
  provisioner "shell" {
    environment_vars = [
      "DEBIAN_FRONTEND=noninteractive"
    ]
    scripts = [
      "scripts/89-cleanup-logs.sh",
      "scripts/90-cleanup.sh",
      "scripts/99-img-check.sh"
    ]
  }
}
